<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="canvasrect_8cpp" kind="file" language="C++">
    <compoundname>canvasrect.cpp</compoundname>
    <includes refid="canvasrect_8h" local="yes">canvasrect.h</includes>
    <incdepgraph>
      <node id="480">
        <label>QMap</label>
      </node>
      <node id="506">
        <label>limits</label>
      </node>
      <node id="489">
        <label>plot2dbase.h</label>
        <link refid="plot2dbase_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>QRectF</label>
      </node>
      <node id="483">
        <label>QObject</label>
      </node>
      <node id="495">
        <label>axisbase.h</label>
        <link refid="axisbase_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
      </node>
      <node id="499">
        <label>axisspec.h</label>
        <link refid="axisspec_8h_source"/>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>plotbase.h</label>
        <link refid="plotbase_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>../QKDTree/QKDTree/QKDTree.h</label>
      </node>
      <node id="479">
        <label>nutmegobject.h</label>
        <link refid="nutmegobject_8h_source"/>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>QList</label>
      </node>
      <node id="505">
        <label>QLineF</label>
      </node>
      <node id="497">
        <label>locators.h</label>
        <link refid="locators_8h_source"/>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
      </node>
      <node id="486">
        <label>fillspec.h</label>
        <link refid="fillspec_8h_source"/>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="500">
        <label>QFont</label>
      </node>
      <node id="501">
        <label>util.h</label>
        <link refid="util_8h_source"/>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
      </node>
      <node id="493">
        <label>QQuickPaintedItem</label>
      </node>
      <node id="478">
        <label>QPainter</label>
      </node>
      <node id="484">
        <label>linespec.h</label>
        <link refid="linespec_8h_source"/>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>canvasshape.h</label>
        <link refid="canvasshape_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>src/canvasrect.cpp</label>
        <link refid="canvasrect.cpp"/>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="492">
        <label>axis2dbase.h</label>
        <link refid="axis2dbase_8h_source"/>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
      </node>
      <node id="481">
        <label>QString</label>
      </node>
      <node id="485">
        <label>QColor</label>
      </node>
      <node id="488">
        <label>xyplot.h</label>
        <link refid="xyplot_8h_source"/>
        <childnode refid="489" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>canvasrect.h</label>
        <link refid="canvasrect_8h_source"/>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>plotcanvas.h</label>
        <link refid="plotcanvas_8h_source"/>
        <childnode refid="493" relation="include">
        </childnode>
      </node>
      <node id="477">
        <label>QQuickItem</label>
      </node>
      <node id="490">
        <label>plotdata.h</label>
        <link refid="plotdata_8h_source"/>
        <childnode refid="491" relation="include">
        </childnode>
      </node>
      <node id="482">
        <label>QVariant</label>
      </node>
      <node id="498">
        <label>QStringList</label>
      </node>
      <node id="487">
        <label>canvasplot.h</label>
        <link refid="canvasplot_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="491">
        <label>QAbstractTableModel</label>
      </node>
      <node id="504">
        <label>QPolygonF</label>
      </node>
      <node id="494">
        <label>QMultiMap</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;canvasrect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">CanvasRect::CanvasRect(QQuickItem<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_canvas_shape" kindref="compound">CanvasShape</ref>(parent)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CanvasRect::paint(QPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QTransform<sp/>&amp;tran,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;limits)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>plotRect<sp/>=<sp/>bounds();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>not<sp/>waste<sp/>time<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!limits.intersects(plotRect))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>boilerplate<sp/>style<sp/>stuff<sp/>to<sp/>a<sp/>CanvasShape::applyStyle(QPainter*)<sp/>func?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>pen;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_line_spec" kindref="compound">LineSpec</ref><sp/>*ln<sp/>=<sp/>lineSpec();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>pen.setColor(ln-&gt;color());</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>pen.setWidthF(ln-&gt;width());</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>style<sp/>=<sp/>ln-&gt;style();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pen.setStyle(Qt::SolidLine);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pen.setStyle(<sp/>LineSpec::styleMap[style]<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>QBrush<sp/>brush;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>brush.setStyle(Qt::SolidPattern);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>brush.setColor(fillSpec()-&gt;color());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setRenderHint(QPainter::Antialiasing);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>draw<sp/>the<sp/>part<sp/>of<sp/>the<sp/>rect<sp/>in<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>limits.intersected(plotRect);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Figure<sp/>out<sp/>which<sp/>sides<sp/>still<sp/>need<sp/>lines...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;QLineF&gt;<sp/>lines;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.left()<sp/>==<sp/>plotRect.left())</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>&lt;&lt;<sp/>QLineF(rect.bottomLeft(),<sp/>rect.topLeft());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.right()<sp/>==<sp/>plotRect.right())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>&lt;&lt;<sp/>QLineF(rect.bottomRight(),<sp/>rect.topRight());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.top()<sp/>==<sp/>plotRect.top())</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>&lt;&lt;<sp/>QLineF(rect.topLeft(),<sp/>rect.topRight());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.bottom()<sp/>==<sp/>plotRect.bottom())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>&lt;&lt;<sp/>QLineF(rect.bottomLeft(),<sp/>rect.bottomRight());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>the<sp/>fill<sp/>and<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>mappedRect<sp/>=<sp/>tran.mapRect(rect);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lines.length();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines[i]<sp/>=<sp/>tran.map(lines[i]);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(Qt::NoPen);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brush);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawRect(mappedRect);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>outline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(pen);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawLines(lines);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//QRectF<sp/>CanvasRect::rect()<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>m_rect;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>CanvasRect::setRect(QRectF<sp/>arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(m_rect<sp/>==<sp/>arg)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_rect<sp/>=<sp/>arg;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>setBounds(arg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>emit<sp/>rectChanged(arg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/kitham/projects/qt/nutmeg/src/canvasrect.cpp"/>
  </compounddef>
</doxygen>
